<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework">

    <Color x:Key="ButtonNormalBackgroundColor">#666666</Color>
    <Color x:Key="ButtonDisabledBackgroundColor">#2D2D2D</Color>
    <Color x:Key="ButtonHighlightBackgroundColor">#004686</Color>
    <Color x:Key="ButtonNormalTextColor">WhiteSmoke</Color>
    <Color x:Key="ButtonHighlightTextColor">#004686</Color>
    <Color x:Key="ButtonIconNormalColor">WhiteSmoke</Color>
    <Color x:Key="ButtonIconHighlightColor">#5DBCD2</Color>
    <Color x:Key="ButtonToggledColor">#004686</Color>

    <SolidColorBrush x:Key="ButtonNormalBackgroundBrush" Color="{StaticResource ButtonNormalBackgroundColor}"  />
    <SolidColorBrush x:Key="ButtonDisabledBackgroundBrush" Color="{StaticResource ButtonDisabledBackgroundColor}"  />
    <SolidColorBrush x:Key="ButtonHighlightBackgroundBrush" Color="{StaticResource ButtonHighlightBackgroundColor}"/>
    <SolidColorBrush x:Key="ButtonNormalForegroundBrush" Color="{StaticResource ButtonNormalTextColor}"  />
    <SolidColorBrush x:Key="ButtonHighlightForegroundBrush" Color="{StaticResource ButtonHighlightTextColor}" />
    <SolidColorBrush x:Key="ToggleButtonSelectedColor" Color="{StaticResource ButtonToggledColor}"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonIconNormalBrush" Color="{StaticResource ButtonIconNormalColor}"></SolidColorBrush>
    <SolidColorBrush x:Key="PressedBrush" Color="DarkGray"></SolidColorBrush>
    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <ControlTemplate x:Key="chromelessToggleBtnTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="Chrome" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                Margin="0" 
                Background="{TemplateBinding Background}"
                CornerRadius="2"
                SnapsToDevicePixels="True">
            <ContentPresenter Margin="2"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          RecognizesAccessKey="True"/>
            <vsm:VisualStateManager.VisualStateGroups>
                <vsm:VisualStateGroup x:Name="CommonStates">
                    <vsm:VisualState x:Name="Normal"/>
                    <vsm:VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)" 
                                Storyboard.TargetName="{x:Null}" 
                                To="{StaticResource ButtonHighlightBackgroundColor}" Duration="0" />
                        </Storyboard>
                    </vsm:VisualState>
                    <vsm:VisualState x:Name="Pressed">
                        <Storyboard>

                        </Storyboard>
                    </vsm:VisualState>
                </vsm:VisualStateGroup>
                <vsm:VisualStateGroup x:Name="CheckStates">
                    <vsm:VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)" 
                                Storyboard.TargetName="{x:Null}" 
                                To="{StaticResource ButtonToggledColor}" Duration="0" />
                        </Storyboard>
                    </vsm:VisualState>
                    <vsm:VisualState x:Name="Unchecked"/>
                </vsm:VisualStateGroup>
            </vsm:VisualStateManager.VisualStateGroups>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="chromelessBtnTemplate" TargetType="{x:Type Button}">
        <Border x:Name="Chrome" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                Margin="0" 
                Background="{TemplateBinding Background}"
                CornerRadius="2"
                SnapsToDevicePixels="True">
            <ContentPresenter Margin="2"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              RecognizesAccessKey="True">

            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ContentButtonPathStyle"
           TargetType="{x:Type Path}">
        <Style.Resources>
            <Storyboard x:Key="OnMouseEnterStoryboard">
                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                Storyboard.TargetName="{x:Null}"
                                To="{StaticResource ButtonIconHighlightColor}"
                                Duration="0" />
            </Storyboard>
            <Storyboard x:Key="OnMouseLeaveStoryboard">
                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                Storyboard.TargetName="{x:Null}"
                                To="{StaticResource ButtonIconNormalColor}"
                                Duration="0" />
            </Storyboard>
            <Storyboard x:Key="OnMouseDownStoryboard">
                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>-->
            </Storyboard>
            <Storyboard x:Key="OnMouseUpStoryboard">
                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                </DoubleAnimationUsingKeyFrames>-->
            </Storyboard>
        </Style.Resources>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard Storyboard="{StaticResource OnMouseEnterStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard Storyboard="{StaticResource OnMouseLeaveStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
                                 Storyboard="{StaticResource OnMouseDownStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.PreviewMouseUp">
                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
                                 Storyboard="{StaticResource OnMouseUpStoryboard}" />
            </EventTrigger>
        </Style.Triggers>

        <Setter Property="Fill"
                Value="{StaticResource ButtonIconNormalBrush}" />
    </Style>

    <Style x:Key="ContentButton"
           TargetType="{x:Type Button}">
        <Style.Resources>
            <Storyboard x:Key="OnMouseEnterStoryboard">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                Storyboard.TargetName="{x:Null}"
                                To="{StaticResource ButtonHighlightBackgroundColor}"
                                Duration="0" />
            </Storyboard>
            <Storyboard x:Key="OnMouseLeaveStoryboard">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                Storyboard.TargetName="{x:Null}"
                                To="{StaticResource ButtonNormalBackgroundColor}"
                                Duration="0" />
            </Storyboard>
            <Storyboard x:Key="OnMouseDownStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0"
                                          Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseUpStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="{StaticResource ButtonNormalBackgroundBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{StaticResource ButtonNormalForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Path}"
                               BasedOn="{StaticResource ContentButtonPathStyle}" >
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" Value="{StaticResource DisabledTextBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource ButtonDisabledBackgroundBrush}"/>
            </Trigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard Storyboard="{StaticResource OnMouseEnterStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard Storyboard="{StaticResource OnMouseLeaveStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
                                 Storyboard="{StaticResource OnMouseDownStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.PreviewMouseUp">
                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
                                 Storyboard="{StaticResource OnMouseUpStoryboard}" />
            </EventTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="chromelessToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonNormalForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template" Value="{StaticResource chromelessToggleBtnTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="{StaticResource ToggleButtonSelectedColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="chromelessImageButton" TargetType="{x:Type Button}">
        <Style.Resources>
            <Storyboard x:Key="OnMouseEnterStoryboard">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                Storyboard.TargetName="{x:Null}" 
                                To="{StaticResource ButtonHighlightTextColor}" Duration="0" />
            </Storyboard>
            <Storyboard x:Key="OnMouseLeaveStoryboard">
                <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                Storyboard.TargetName="{x:Null}" 
                                To="Transparent" Duration="0" />
            </Storyboard>
            <Storyboard x:Key="OnMouseDownStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseUpStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonNormalForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template" Value="{StaticResource chromelessBtnTemplate}"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard Storyboard="{StaticResource OnMouseEnterStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <BeginStoryboard Storyboard="{StaticResource OnMouseLeaveStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard" Storyboard="{StaticResource OnMouseDownStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.PreviewMouseUp">
                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard" Storyboard="{StaticResource OnMouseUpStoryboard}" />
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StyledTransparentButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                            x:Name="Border"
                            CornerRadius="12"
                            BorderThickness="1"
                            BorderBrush="Transparent"                                
                            Background="Transparent" >
                        <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Setter Property="FontFamily" Value="Consolas" />
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="styledTransparentRepeatButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Border"
                            CornerRadius="12"
                            BorderThickness="1"
                            BorderBrush="Transparent"
                            Background="Transparent">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
        <Setter Property="FontFamily"
                Value="Consolas" />
        <Setter Property="FontSize"
                Value="48" />
        <Setter Property="Margin"
                Value="10" />
    </Style>

</ResourceDictionary>